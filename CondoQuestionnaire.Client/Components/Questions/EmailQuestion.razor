@using CondoQuestionnaire.Client.Converters
@using System.ComponentModel.DataAnnotations

<div>@question.Label</div>
<MudTextField Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})"
              Converter="@ConverterUtility.StringConverter" @bind-Value=@answer.Data />

@code {
    [Parameter]
    public CondoQuestionnaireAnswer answer { get; set; }

    [Parameter]
    public IQuestion question { get; set; }

    [Parameter]
    public IList<CondoQuestionnaireAnswer> answerList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (answerList.Any(x => x.QuestionCode == question.Code))
        {
            answer = answerList.FirstOrDefault(x => x.QuestionCode == question.Code);
        }
        else
        {
            answer = new CondoQuestionnaireAnswer()
                {
                    QuestionCode = question.Code,
                    QuestionType = question.Type,
                };
            answerList.Add(answer);
        }
    }
}
